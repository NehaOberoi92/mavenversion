<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	                             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http auto-config="true" disable-url-rewriting="true" use-expressions="true">
        <form-login login-page="/signin" authentication-failure-url="/signin?error=1" default-target-url="/displaySpanners"/>
        <logout logout-url="/logout" />

        <!-- Enable user switching - admin users may view the site as another user -->
        <custom-filter position="SWITCH_USER_FILTER" ref="switchUserProcessingFilter" />

        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/signin" access="permitAll" />
        <intercept-url pattern="/signup" access="permitAll" />
        <intercept-url pattern="/version.txt" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_PREVIOUS_ADMINISTRATOR')" />
        <intercept-url pattern="/**" access="isAuthenticated()" />

        <!-- CSRF protection not yet supported in this app -->
        <csrf disabled="true"/>

        <!-- Display the custom 403 error page instead of throwing an exception -->
        <access-denied-handler error-page="/403" />

    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsManager">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- UserDetailsManager acts as a UserDetailsService for the authentication provider
         and also allows CRUD operations on users and groups. Backed by JDBC - the spanners database. -->
    <beans:bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <beans:property name="dataSource" ref="spannersDS"/>
    </beans:bean>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Enable security annotations on methods -->
    <global-method-security pre-post-annotations="enabled">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>

    <beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="spannerPermissionEvaluator"/>
    </beans:bean>

    <beans:bean id="spannerPermissionEvaluator" class="org.dontpanic.spanners.security.SpannerPermissionEvaluator"/>

    <beans:bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter">
        <beans:property name="userDetailsService" ref="userDetailsManager"/>
        <beans:property name="switchUserUrl" value="/admin/impersonate"/>
        <beans:property name="targetUrl" value="/displaySpanners"/>
        <beans:property name="switchFailureUrl" value="/admin/switchUser"/>
    </beans:bean>

</beans:beans>